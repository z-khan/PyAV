#!/bin/bash

if [[ ! "$_PYAV_ACTIVATED" ]]; then
    export here="$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"
    source "$here/activate.sh"
fi

cd "$PYAV_ROOT"

# Skip the rest of the build if it already exists.
if [[ -e "$PYAV_LIBRARY_PREFIX/bin/ffmpeg" ]]; then
    echo "We have a cached build of ffmpeg-$PYAV_LIBRARY; skipping re-build."
    exit 0
fi


mkdir -p "$PYAV_LIBRARY_ROOT"
mkdir -p "$PYAV_LIBRARY_PREFIX"
cd "$PYAV_LIBRARY_ROOT"

# Extract version from PYAV_LIBRARY
PYAV_LIBRARY_VERSION="${PYAV_LIBRARY#*-}"

if [[ "$PYAV_NVMPI" ]]; then
    # Clone jetson-ffmpeg
    git clone https://github.com/Keylost/jetson-ffmpeg.git
    cd jetson-ffmpeg
    mkdir build
    cd build
    cmake -DWITH_STUBS=ON -DJETSON_MULTIMEDIA_LIB_DIR=/usr/lib/aarch64-linux-gnu/nvidia ..
    make -j4
    make install
    ldconfig
    cd "$PYAV_LIBRARY_ROOT"
fi

if [[ ! -d $PYAV_LIBRARY ]]; then
    git clone git://source.ffmpeg.org/ffmpeg.git $PYAV_LIBRARY -b n$PYAV_LIBRARY_VERSION --depth=1  || exit 1
    echo
fi
cd $PYAV_LIBRARY

if [[ "$PYAV_NVMPI" ]]; then
    wget https://github.com/Keylost/jetson-ffmpeg/raw/master/ffmpeg_patches/ffmpeg6.0_nvmpi.patch -O ffmpeg_nvmpi.patch
    git apply ffmpeg_nvmpi.patch
fi

echo ./configure
./configure \
    --disable-doc \
    --disable-static \
    --disable-stripping \
    --enable-debug=3 \
    --enable-gpl \
    --enable-version3 \
    --enable-libx264 \
    --enable-libxml2 \
    --enable-shared \
    --enable-sse \
    --enable-avx \
    --enable-avx2 \
    ${PYAV_NVMPI:+--enable-nvmpi} \
    --prefix="$PYAV_LIBRARY_PREFIX" \
    || exit 2
echo

echo make
make -j4 || exit 3
echo

echo make install
make install || exit 4
echo

echo Build products:
cd ~
find "$PYAV_LIBRARY_PREFIX" -name '*libav*'
